generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}


datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model CatalogCache {
  id        String   @id @default(cuid())
  board     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  threads CatalogCacheThread[]
}

model CatalogCacheThread {
  id String @id @default(cuid())

  board          String
  no             Int
  sticky         Int?
  closed         Int?
  now            String
  name           String
  sub            String?
  com            String?
  filename       String?
  ext            String?
  w              Int?
  h              Int?
  tn_w           Int?
  tn_h           Int?
  tim            Int?   // Changed BigInt? to Int to resolve data inconsistency
  time           Int
  md5            String?
  fsize          Int?
  resto          Int     @default(0)
  capcode        String?
  semantic_url   String?
  replies        Int     @default(0)
  images         Int     @default(0)
  ordinal        Int
  bumplimit      Int?
  country        String?
  country_name   String?
  custom_spoiler Int?
  filedeleted    Int?
  spoiler        Int?
  imagelimit     Int?
  trip           String?
  m_img          Int?
  since4pass     Int?
  unique_ips     Int?
  tag            String?

  catalogCacheId String
  catalogCache   CatalogCache @relation(fields: [catalogCacheId], references: [id])

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@unique([board, no])
  @@index([no])
}

model ThreadCache {
  id             String   @id @default(cuid())
  board          String
  no             Int
  sticky         Int?
  closed         Int?
  now            String
  name           String
  sub            String?
  com            String?
  filename       String?
  ext            String?
  w              Int?
  h              Int?
  tn_w           Int?
  tn_h           Int?
  tim            Int?   // Changed BigInt? to Int to resolve data inconsistency
  time           Int
  md5            String?
  fsize          Int?
  resto          Int      @default(0)
  capcode        String?
  semantic_url   String?
  replies        Int      @default(0)
  images         Int      @default(0)
  bumplimit      Int?
  country        String?
  country_name   String?
  custom_spoiler Int?
  filedeleted    Int?
  spoiler        Int?
  imagelimit     Int?
  trip           String?
  m_img          Int?
  since4pass     Int?
  unique_ips     Int?
  tag            String?
  updatedAt      DateTime @updatedAt
  createdAt      DateTime @default(now())

  responses ThreadCacheResponse[]

  @@unique([no, board])
  @@index([no, board])
}

model ThreadCacheResponse {
  id             String  @id @default(cuid())
  board          String
  no             Int
  now            String
  name           String
  com            String?
  filename       String?
  ext            String?
  w              Int?
  h              Int?
  tn_w           Int?
  tn_h           Int?
  tim            Int?   // Changed BigInt? to Int to resolve data inconsistency
  time           Int
  md5            String?
  fsize          Int?
  resto          Int     @default(0)
  capcode        String?
  country        String?
  country_name   String?
  custom_spoiler Int?
  filedeleted    Int?
  spoiler        Int?
  trip           String?
  m_img          Int?
  since4pass     Int?

  threadCacheId String
  threadCache   ThreadCache @relation(fields: [threadCacheId], references: [id])
}
